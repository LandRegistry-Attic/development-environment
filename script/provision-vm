#!/bin/bash
set -e

echo "Running devkit puppet module"
rm -rf /tmp/devkit
git clone https://github.com/LandRegistry/infrastructure-puppet-devkit /tmp/devkit
puppet apply /tmp/devkit/tests/optional.pp --modulepath=/tmp

# elasticsearch
wget -qO - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add -
echo "deb http://packages.elasticsearch.org/elasticsearch/1.3/debian stable main" > /etc/apt/sources.list.d/elasticsearch.list

echo "Updating repositories"
apt-get update -qq

echo "Setting up core linux tools"
apt-get install -qy libcurl4-openssl-dev phantomjs
apt-get install -qy binutils libproj-dev gdal-bin libgdal-dev libgeos-3.4.2 libproj0 libgdal1h  python-gdal

echo "Installing dependencies"
apt-get install -qy elasticsearch 

echo "Configuring postgres"
cat <<EOF > /etc/postgresql/9.3/main/pg_hba.conf
local   all             postgres                                peer
local   all             all                                     trust
host    all             all             127.0.0.1/32            trust
host    all             all             ::1/128                 trust
EOF

service postgresql restart

set +o errexit
# TODO: I'm creating vagrant as a superuser here, but don't really think we need this
sudo -u postgres createuser -sw vagrant
set -e

echo "Starting elasticsearch"
sudo update-rc.d elasticsearch defaults 95 10
sudo /etc/init.d/elasticsearch start

echo "Configuring user environment"
WORKON_HOME=/home/vagrant/land-registry-python-venvs
bash_profile=/home/vagrant/.bash_profile
rm -rf ${WORKON_HOME}
mkdir -p ${WORKON_HOME}

echo "Bootstrapping environment"
su vagrant -c cat <<EOF > /home/vagrant/.ssh/config
Host github.com
	StrictHostKeyChecking no 

EOF
chown -R vagrant:vagrant /home/vagrant
su vagrant -c /vagrant/script/bin/lr-bootstrap

cat <<EOF > ${bash_profile}
export WORKON_HOME=${WORKON_HOME}
export PATH=/vagrant/script/bin:${PATH}

source /usr/local/bin/virtualenvwrapper.sh
alias ls="ls -F"
cd /vagrant

if [[ ! -d ./apps ]] ; then
	echo "Bootstrapping environment"
	lr-bootstrap
fi

lr-nginx
EOF

echo "Creating databases"
set +o errexit
su vagrant -c /vagrant/script/bin/lr-create-all-databases 
set -e

echo "Configuring nginx"
rm -f /tmp/etchosts
/vagrant/script/bin/lr-nginx

echo "Configuring /etc/hosts"
ETCHOSTS=`cat /tmp/etchosts`

cat <<EOF > /etc/hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
0.0.0.0  lr-dev lr-ubuntu
172.16.42.43 ${ETCHOSTS}

EOF

rm -f /tmp/etchosts

# A reminder...
echo "Copying motd"
sudo cp /vagrant/config/motd /etc/motd
