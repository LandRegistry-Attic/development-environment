#!/bin/bash

#Uncomment this line if you want to debug this script
#set -x
set -e

case `uname` in
	Linux)
		if [[ ! -d /vagrant ]] ; then
			echo "You need to be running in the vagrant VM to do this"
			exit 1
		fi
	;;

	*)	
		echo
		echo
		echo "You need to be running in your vagrant virtual machine to run this."
		echo
		echo "Run vagrant ssh from the root directory of the development environment and then re-run this script"
		echo
		exit 1
	;;
esac

source /vagrant/script/checkout

args=(${@})
first_arg=${args[0]}
apps_to_start=()

if [ -z ${first_arg} ]; then
	# We've not been called with any arguments. Let's see if we're in an
	# application directory with a run.sh

	if [ -f ./run.sh ]; then
	  apps_to_start=$(basename `pwd`)
	else
	  echo 
	  echo "You've called this script without specifiy which apps you need and I can't find a run.sh" 
	  echo "in the current directory [`pwd`]" 
	  echo 
	  echo "You either need to specify some apps, or lr-run-app from the base directory of an app with a run.sh" 
	  echo 
	  exit 1
	fi
fi

check_all_apps_are_valid ${app_to_start}
configure_virtual_env_for_apps ${apps_to_start}

# TODO: MW - tech debt --
# Currently our run.sh scripts in the apps don't always work with set -e in place
# because we're not running proper database migrations.
# Until we've sorted out the apps we'll disable -e here

set +o errexit
PORT=$(get_port_for_app $1) source run.sh
deactivate
set -e
